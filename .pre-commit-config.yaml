# Pre-commit hooks for Lead-to-Lease Chat Concierge
# Install with: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        description: Trim trailing whitespace
      - id: end-of-file-fixer
        description: Ensure files end with newline
      - id: check-yaml
        description: Check YAML syntax
      - id: check-json
        description: Check JSON syntax
      - id: check-toml
        description: Check TOML syntax
      - id: check-merge-conflict
        description: Check for merge conflict markers
      - id: check-added-large-files
        description: Prevent large files from being committed
        args: ['--maxkb=1000']
      - id: check-case-conflict
        description: Check for case conflicts
      - id: mixed-line-ending
        description: Check for mixed line endings

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        description: Format Python code with Black
        files: ^backend/.*\.py$
        args: [--line-length=88, --target-version=py310]

  # Python import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        description: Sort Python imports
        files: ^backend/.*\.py$
        args: [--profile=black, --line-length=88]

  # Python linting with flake8 (temporarily disabled due to configuration issues)
  # - repo: https://github.com/pycqa/flake8
  #   rev: 7.0.0
  #   hooks:
  #     - id: flake8
  #       description: Lint Python code with flake8
  #       files: ^backend/.*\.py$
  #       args: [
  #         --max-line-length=88,
  #         --extend-ignore=E203,W503,E501,C901,F401,F541,E402,F841,E712,E713,
  #         --max-complexity=15
  #       ]

  # Python security checks with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        description: Security linting for Python
        files: ^backend/.*\.py$
        args: [-r, --skip=B101,B601,B104,B105,B110,B311]

  # Python type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        description: Static type checking for Python
        files: ^backend/.*\.py$
        args: [--ignore-missing-imports, --no-strict-optional]
        additional_dependencies: [types-requests, types-python-dateutil, types-dateparser]

  # JavaScript/TypeScript linting with ESLint
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        description: Lint JavaScript/JSX files
        files: ^frontend/src/.*\.(js|jsx|ts|tsx)$
        additional_dependencies:
          - eslint@8.56.0
          - eslint-plugin-react@7.33.2
          - eslint-plugin-react-hooks@4.6.0
          - eslint-plugin-react-refresh@0.4.4

  # Dockerfile linting (disabled - requires Docker daemon)
  # - repo: https://github.com/hadolint/hadolint
  #   rev: v2.12.0
  #   hooks:
  #     - id: hadolint-docker
  #       description: Lint Dockerfiles
  #       files: Dockerfile.*

  # Markdown linting (temporarily disabled due to extensive formatting requirements)
  # - repo: https://github.com/igorshubovych/markdownlint-cli
  #   rev: v0.38.0
  #   hooks:
  #     - id: markdownlint
  #       description: Lint Markdown files
  #       args: [--fix]
  #       files: \.md$

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        description: Lint YAML files
        args: [-d, relaxed]

# Configuration for specific tools
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
